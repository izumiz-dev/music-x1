name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'pnpm'  # Enable caching for pnpm

      - name: Install pnpm
        run: npm install -g pnpm@9.x

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Zip build artifacts
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          zip -r music-x1-${VERSION}.zip ./dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./music-x1-${{ github.ref_name }}.zip
          asset_name: music-x1-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Create source code zip
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          git archive -o music-x1-source-${VERSION}.zip HEAD

      - name: Upload source code zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./music-x1-source-${{ github.ref_name }}.zip
          asset_name: music-x1-source-${{ github.ref_name }}.zip
          asset_content_type: application/zip
